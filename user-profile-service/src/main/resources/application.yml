spring:
  application:
    name: user-profile-service

  # DataSource Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:trademaster_userprofile}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:600000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1800000}
      minimum-idle: ${HIKARI_MIN_IDLE:5}
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:20}
      pool-name: UserProfileServiceHikariCP

  # JPA Configuration with PostgreSQL JSONB
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:validate}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
    properties:
      hibernate:
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
        show_sql: ${HIBERNATE_SHOW_SQL:false}
        use_sql_comments: ${HIBERNATE_SQL_COMMENTS:false}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        types:
          print:
            banner: false
    show-sql: ${JPA_SHOW_SQL:false}

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:3600000} # 1 hour

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:2000}
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:20}
          max-idle: ${REDIS_POOL_MAX_IDLE:10}
          min-idle: ${REDIS_POOL_MIN_IDLE:2}

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: ${KAFKA_PRODUCER_RETRIES:3}
      batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}
      linger-ms: ${KAFKA_PRODUCER_LINGER_MS:10}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:user-profile-service}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false

  # Liquibase Configuration
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: ${LIQUIBASE_ENABLED:true}

  # Virtual Threads Configuration (Java 24)
  threads:
    virtual:
      enabled: true

# Server Configuration
server:
  port: ${SERVER_PORT:8083}
  servlet:
    context-path: ${CONTEXT_PATH:/api/v1}
  tomcat:
    threads:
      max: ${TOMCAT_MAX_THREADS:200}
      min-spare: ${TOMCAT_MIN_THREADS:10}
    connection-timeout: ${TOMCAT_CONNECTION_TIMEOUT:20000}

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true

# Logging Configuration
logging:
  level:
    com.trademaster.userprofile: ${LOG_LEVEL_APP:INFO}
    org.springframework.kafka: ${LOG_LEVEL_KAFKA:WARN}
    org.hibernate: ${LOG_LEVEL_HIBERNATE:WARN}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.springframework.transaction: ${LOG_LEVEL_TX:WARN}
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_NAME:logs/user-profile-service.log}
    max-size: ${LOG_FILE_MAX_SIZE:10MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}

# TradeMaster Configuration
trademaster:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-here-must-be-at-least-32-chars-long}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days
  
  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:8000}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  
  # Security Configuration
  security:
    permit-all-paths: ${SECURITY_PERMIT_ALL_PATHS:/actuator/health,/actuator/info,/api/v1/profiles/*/exists}
    max-session-duration: ${MAX_SESSION_DURATION:28800} # 8 hours
    
    password-policy:
      min-length: ${PASSWORD_MIN_LENGTH:12}
      require-uppercase: ${PASSWORD_REQUIRE_UPPERCASE:true}
      require-lowercase: ${PASSWORD_REQUIRE_LOWERCASE:true}
      require-numbers: ${PASSWORD_REQUIRE_NUMBERS:true}
      require-special: ${PASSWORD_REQUIRE_SPECIAL:true}
    
    rate-limiting:
      requests-per-minute: ${RATE_LIMIT_PER_MINUTE:60}
      burst-size: ${RATE_LIMIT_BURST:10}

  user-profile:
    # Document Management
    documents:
      max-file-size: ${USER_PROFILE_MAX_FILE_SIZE:20971520} # 20MB
      allowed-mime-types: ${USER_PROFILE_ALLOWED_MIMES:image/jpeg,image/png,application/pdf}
      storage-path: ${USER_PROFILE_STORAGE_PATH:/var/trademaster/documents}
      cleanup-interval: ${USER_PROFILE_CLEANUP_INTERVAL:86400000} # 24 hours
    
    # KYC Configuration
    kyc:
      verification-timeout: ${KYC_VERIFICATION_TIMEOUT:172800000} # 48 hours
      retry-attempts: ${KYC_RETRY_ATTEMPTS:3}
      auto-approve-threshold: ${KYC_AUTO_APPROVE_THRESHOLD:95}
    
    # Audit Configuration
    audit:
      retention-days: ${AUDIT_RETENTION_DAYS:2555} # 7 years
      batch-size: ${AUDIT_BATCH_SIZE:1000}
      enabled: ${AUDIT_ENABLED:true}
    
    # Cache Configuration
    cache:
      profile-ttl: ${PROFILE_CACHE_TTL:1800} # 30 minutes
      preferences-ttl: ${PREFERENCES_CACHE_TTL:3600} # 1 hour
      documents-ttl: ${DOCUMENTS_CACHE_TTL:900} # 15 minutes
    
    # Circuit Breaker Configuration
    circuit-breaker:
      failure-rate-threshold: ${CB_FAILURE_RATE_THRESHOLD:50}
      wait-duration: ${CB_WAIT_DURATION:60}
      sliding-window-size: ${CB_SLIDING_WINDOW_SIZE:10}
      minimum-calls: ${CB_MINIMUM_CALLS:5}
        
# Actuator Info
info:
  app:
    name: "TradeMaster User Profile Service"
    version: "2.0.0"
    description: "Enterprise User Profile Management with KYC and Document Management"
    java-version: "24"
    spring-version: "3.5.3"