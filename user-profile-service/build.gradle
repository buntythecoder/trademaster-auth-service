plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '10.0.0'
}

group = 'com.trademaster'
version = '1.0.0'

java {
    sourceCompatibility = '24'
    targetCompatibility = '24'
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Hibernate Types for JSONB
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.6.0'
    
    // Validation
    implementation 'org.hibernate.validator:hibernate-validator'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // File Upload
    implementation 'commons-io:commons-io:2.13.0'
    implementation 'org.apache.tika:tika-core:2.9.1'
    
    // MinIO for file storage
    implementation 'io.minio:minio:8.5.7'
    
    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:redis'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Flyway configuration
flyway {
    url = 'jdbc:postgresql://localhost:5432/trademaster_profiles'
    user = 'trademaster_user'
    password = 'trademaster_password'
    locations = ['classpath:db/migration']
    baselineOnMigrate = true
    validateOnMigrate = true
}

// JVM arguments for virtual threads
applicationDefaultJvmArgs = [
    "-Dspring.threads.virtual.enabled=true",
    "--enable-preview"
]

compileJava {
    options.compilerArgs += [
        '--enable-preview'
    ]
}

// Spring Boot configuration
springBoot {
    mainClass = 'com.trademaster.userprofile.UserProfileServiceApplication'
    buildInfo()
}