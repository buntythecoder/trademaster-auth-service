plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'jacoco'
}

group = 'com.trademaster'
version = '1.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Dependency Management for Spring Cloud (Required by Common Library)
dependencyManagement {
    imports {
        // Spring Cloud BOM for Consul discovery
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
    }
}

dependencies {
    // TradeMaster Common Service Library (Foundation) - Composite Build
    implementation 'com.trademaster:trademaster-common-service-lib:1.0.0'

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // AgentOS Framework Dependencies
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // Time-Series Database (InfluxDB)
    implementation 'com.influxdb:influxdb-client-java:7.1.0'
    
    // HTTP Client
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // JWT Support
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    
    // Caching
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Utilities
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Monitoring & Metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // Hypersistence Utils for JSON column support
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.3'
    
    // Circuit Breaker (Resilience4j)
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-timelimiter:2.2.0'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    // Note: Redis container support is included in main testcontainers via GenericContainer
    testImplementation 'com.h2database:h2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    
    // Circuit Breaker Testing
    testImplementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    testImplementation 'io.github.resilience4j:resilience4j-reactor:2.2.0'
}

// MANDATORY: Java 24 Preview Features per TradeMaster Standards
tasks.named('compileJava') {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('compileTestJava') {
    options.compilerArgs += ['--enable-preview']
}

// Enable preview features for AOT compilation
tasks.withType(JavaCompile).matching { it.name.contains('Aot') }.configureEach {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('test') {
    jvmArgs += ['--enable-preview']
    useJUnitPlatform()
    systemProperty 'spring.aot.enabled', 'false'

    // Disable JaCoCo agent due to Java 24 instrumentation issues
    jacoco {
        enabled = false
    }
}

// Disable AOT for tests to avoid testcontainers issues
tasks.withType(Test).configureEach {
    systemProperty 'spring.aot.enabled', 'false'
}

// Disable AOT processing tasks entirely for tests
tasks.matching { it.name.contains('Aot') && it.name.contains('Test') }.configureEach {
    enabled = false
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += ['--enable-preview']
}

// Boot run configuration
bootRun {
    jvmArgs = [
        "-Dspring.threads.virtual.enabled=true",
        "--enable-preview"
    ]
}

tasks.named('bootJar') {
    manifest {
        attributes 'Add-Opens': 'java.base/java.lang java.base/java.util'
    }
}

// Spring Boot configuration
springBoot {
    mainClass = 'com.trademaster.portfolio.PortfolioServiceApplication'
    buildInfo()
}

// JaCoCo Configuration for Test Coverage
jacoco {
    toolVersion = "0.8.12"  // Java 24 support (class file version 68)
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/config/**',
                '**/dto/**',
                '**/entity/**',
                '**/model/**',
                '**/PortfolioServiceApplication.class',
                '**/agentos/registry/**'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport

    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80 // 80% minimum for unit tests
            }
        }
        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70 // 70% branch coverage
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/config/**',
                '**/dto/**',
                '**/entity/**',
                '**/model/**',
                '**/PortfolioServiceApplication.class',
                '**/agentos/registry/**'
            ])
        }))
    }
}

//test.finalizedBy jacocoTestReport  // Temporarily disabled due to Java 24 instrumentation issues