server:
  port: 8080
  servlet:
    context-path: /api/v1
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: trademaster-auth-service
    version: 1.0.0
    
  threads:
    virtual:
      enabled: true
  
  profiles:
    active: dev
    
  datasource:
    url: jdbc:postgresql://localhost:5432/trademaster_auth
    username: ${DB_USERNAME:trademaster_user}
    password: ${DB_PASSWORD:trademaster_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        connection:
          handling_mode: delayed_acquisition_and_release_after_transaction
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
        
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
        
  session:
    store-type: redis
    timeout: 24h
    redis:
      namespace: trademaster:sessions
      
  security:
    require-ssl: false
    
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      
logging:
  level:
    com.trademaster: INFO
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/auth-service.log
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true
        
trademaster:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-here-change-in-production}
    expiration: ${JWT_EXPIRATION:900000} # 15 minutes
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000} # 24 hours
    issuer: trademaster-auth-service
    
  security:
    rate-limit:
      authenticated: ${RATE_LIMIT_AUTHENTICATED:1000} # per minute
      free-tier: ${RATE_LIMIT_FREE:100} # per minute
      premium: ${RATE_LIMIT_PREMIUM:5000} # per minute
    session:
      max-concurrent: ${MAX_CONCURRENT_SESSIONS:5}
      timeout: ${SESSION_TIMEOUT:1440} # 24 hours in minutes
      
  # Endpoint-specific rate limiting configuration
  rate-limit:
    login:
      requests: ${LOGIN_RATE_LIMIT:5} # requests per window
      window-minutes: ${LOGIN_RATE_WINDOW:1} # 1 minute window
    registration:
      requests: ${REGISTRATION_RATE_LIMIT:3} # requests per window
      window-minutes: ${REGISTRATION_RATE_WINDOW:60} # 1 hour window
    password-reset:
      requests: ${PASSWORD_RESET_RATE_LIMIT:2} # requests per window
      window-minutes: ${PASSWORD_RESET_RATE_WINDOW:60} # 1 hour window
    email-verification:
      requests: ${EMAIL_VERIFICATION_RATE_LIMIT:10} # requests per window
      window-minutes: ${EMAIL_VERIFICATION_RATE_WINDOW:60} # 1 hour window
      
  encryption:
    algorithm: AES/GCM/NoPadding
    key-length: 256
    
  mfa:
    enabled: true
    token-validity: 300 # 5 minutes
    
  aws:
    region: ${AWS_REGION:us-east-1}
    kms:
      key-id: ${AWS_KMS_KEY_ID:alias/trademaster-encryption-key}
      
  audit:
    enabled: true
    retention-days: 2555 # 7 years for financial compliance
    
  compliance:
    sebi:
      enabled: true
      audit-level: DETAILED
      
---
spring:
  config:
    activate:
      on-profile: dev
      
  jpa:
    show-sql: true
    properties:
      hibernate:
        generate_statistics: true
        
logging:
  level:
    com.trademaster: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    
---
spring:
  config:
    activate:
      on-profile: prod
      
  datasource:
    hikari:
      maximum-pool-size: 50
      
  security:
    require-ssl: true
    
logging:
  level:
    com.trademaster: INFO
    org.springframework.security: WARN
    root: WARN