# Docker Compose v2 format - no version required

services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.runtime
    ports:
      - "8080:8080"
      - "9080:9080"  # Management port
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/trademaster_auth
      - SPRING_DATASOURCE_USERNAME=trademaster_user
      - SPRING_DATASOURCE_PASSWORD=trademaster_password
      - SPRING_REDIS_HOST=host.docker.internal
      - CONSUL_ENABLED=false
      - CONSUL_DISCOVERY_ENABLED=false
      - SERVICE_AUTH_ENABLED=true
      - SPRING_THREADS_VIRTUAL_ENABLED=true
      - KONG_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,circuitbreakers
    # Using host services - no dependencies needed
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v2/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - trademaster

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=trademaster_auth
      - POSTGRES_USER=trademaster_user
      - POSTGRES_PASSWORD=trademaster_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trademaster_user -d trademaster_auth"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - trademaster

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - trademaster

  # Optional: Kong API Gateway for service authentication testing
  kong:
    image: kong/kong-gateway:3.4.0
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/kong.yaml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - "8000:8000"  # Proxy port
      - "8001:8001"  # Admin API port
    volumes:
      - ./kong.yaml:/kong/kong.yaml
    depends_on:
      - auth-service
    networks:
      - trademaster

volumes:
  postgres_data:
  redis_data:

networks:
  trademaster:
    driver: bridge