plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '10.0.0'
}

group = 'com.trademaster'
version = '1.0.0'

java {
    sourceCompatibility = '24'
    targetCompatibility = '24'
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven/' }
}

ext {
    set('springBootVersion', '3.5.3')
    set('springCloudVersion', '2023.0.2')
    set('kafkaVersion', '7.6.0-ccs')
    set('influxdbVersion', '7.0.0')
    set('testcontainersVersion', '1.20.0')
    set('wireMockVersion', '3.5.2')
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.confluent:kafka-avro-serializer:7.5.0'
    implementation 'io.confluent:kafka-schema-registry-client:7.5.0'
    
    // InfluxDB for time-series data (Updated to latest)
    implementation 'com.influxdb:influxdb-client-java:7.0.0'
    
    // WebSocket and Real-time
    implementation 'org.springframework:spring-websocket'
    implementation 'org.springframework:spring-messaging'
    implementation 'org.springframework.integration:spring-integration-kafka'
    implementation 'org.springframework.integration:spring-integration-websocket'
    
    // HTTP Clients for Market Data APIs - NO REACTIVE
    // Removed spring-boot-starter-webflux to eliminate reactive dependencies
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    
    // Virtual Threads Support (Java 24)
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.boot:spring-boot-starter-webmvc'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // Monitoring and Observability
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    
    // Structured Logging
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'
    
    // Security (Updated)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    
    // Utilities (Updated)
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:33.0.0-jre'
    
    // Configuration
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:influxdb'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:3.0.1'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    maxHeapSize = "2g"
    jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=100', '--enable-preview', '-Dspring.threads.virtual.enabled=true'
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
    layered {
        enabled = true
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/trademaster_marketdata'
    user = 'trademaster_user'
    password = 'trademaster_password'
    schemas = ['market_data']
    locations = ['filesystem:src/main/resources/db/migration']
}