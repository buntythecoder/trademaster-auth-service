# MinIO File Storage Service for TradeMaster
# High-performance S3-compatible object storage for document uploads

version: '3.8'

services:
  # MinIO Storage Server
  minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: trademaster-minio
    restart: unless-stopped
    environment:
      # MinIO root credentials
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-trademaster_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-trademaster_minio_pass_2024}
      
      # MinIO configuration
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
      MINIO_SERVER_URL: http://localhost:9000
      
      # Security settings
      MINIO_BROWSER: "on"
      MINIO_CONSOLE_ADDRESS: ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    networks:
      - trademaster-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

  # MinIO Client for bucket initialization
  minio-init:
    image: minio/mc:RELEASE.2024-01-13T05-39-20Z
    container_name: trademaster-minio-init
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-trademaster_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-trademaster_minio_pass_2024}
    networks:
      - trademaster-network
    entrypoint: |
      /bin/sh -c "
      # Wait for MinIO to be ready
      sleep 10
      
      # Configure MinIO client
      mc alias set minio http://minio:9000 \$$MINIO_ROOT_USER \$$MINIO_ROOT_PASSWORD
      
      # Create buckets for different document types
      mc mb --ignore-existing minio/trademaster-documents
      mc mb --ignore-existing minio/trademaster-kyc-docs
      mc mb --ignore-existing minio/trademaster-profile-pics
      mc mb --ignore-existing minio/trademaster-system-backups
      
      # Set bucket policies for document access
      mc anonymous set download minio/trademaster-profile-pics
      mc anonymous set none minio/trademaster-documents
      mc anonymous set none minio/trademaster-kyc-docs
      mc anonymous set none minio/trademaster-system-backups
      
      # Create lifecycle policies (optional - for document retention)
      mc ilm add --expiry-days 2555 minio/trademaster-documents  # 7 years for compliance
      mc ilm add --expiry-days 90 minio/trademaster-profile-pics    # 90 days for profile pics
      
      echo 'MinIO initialization complete!'
      "
    profiles:
      - setup

volumes:
  minio_data:
    driver: local
  minio_config:
    driver: local

networks:
  trademaster-network:
    external: true