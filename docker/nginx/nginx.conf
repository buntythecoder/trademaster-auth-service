# TradeMaster Nginx Load Balancer Configuration
events {
    worker_connections 1024;
}

http {
    upstream agent_orchestration {
        server agent-orchestration-service:8090;
    }

    upstream broker_auth {
        server broker-auth-service:8087;
    }

    upstream behavioral_ai {
        server behavioral-ai-service:8080;
    }

    upstream ml_platform {
        server ml-infrastructure-platform:8080;
    }

    upstream market_data {
        server market-data-service:8080;
    }

    upstream notification {
        server notification-service:8080;
    }

    upstream risk_management {
        server risk-management-service:8080;
    }

    upstream payment_gateway {
        server payment-gateway-service:8080;
    }

    upstream mlflow {
        server mlflow:5000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=20r/m;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    
    # CORS headers for development
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    add_header Access-Control-Allow-Credentials true always;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            return 200 "TradeMaster Load Balancer OK";
            add_header Content-Type text/plain;
        }

        # Agent Orchestration Service
        location /agent-os/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://agent_orchestration/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Broker Authentication Service  
        location /api/v1/auth/ {
            limit_req zone=auth_limit burst=10 nodelay;
            proxy_pass http://broker_auth/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Behavioral AI Service
        location /behavioral-ai/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://behavioral_ai/behavioral-ai/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ML Infrastructure Platform
        location /ml-platform/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://ml_platform/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Market Data Service
        location /market-data/ {
            limit_req zone=api_limit burst=50 nodelay;
            proxy_pass http://market_data/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time market data
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Notification Service
        location /notifications/ {
            limit_req zone=api_limit burst=30 nodelay;
            proxy_pass http://notification/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Risk Management Service
        location /risk-management/ {
            limit_req zone=api_limit burst=40 nodelay;
            proxy_pass http://risk_management/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Payment Gateway Service
        location /payments/ {
            limit_req zone=auth_limit burst=5 nodelay;
            proxy_pass http://payment_gateway/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # MLflow UI
        location /mlflow/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://mlflow/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}